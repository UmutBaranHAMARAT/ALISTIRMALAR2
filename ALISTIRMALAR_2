"""ALIŞTIRMALAR 2"""


#1.SORU

import random

k = 0
while k == 0 :
    n = str(random.randint(11,99))
    if str(n)[0] != str(n)[1]:
        k = 1

t = 1
while t == 1 :
    i = input("İki basamaklı bir sayı giriniz : ")
    if int(i) <= 10 or int(i) >= 100:
        print("İKİ BASAMAKLI GİRMELİSİNİZ !")
        continue
    if i[0]==i[1]:
        print("GİRDİĞİNİZ SAYININ RAKAMLARI FARKLI OLMALI!")
        continue
    if i[0] == n[0] and i[1] != n[1]:
        print("1")
    if i[0] != n[0] and i[1] == n[1]:
        print("1")
    if i[0] == n[1] and i[1] != n[0]:
        print("-1")
    if i[0] != n[1] and i[1] == n[0]:
        print("-1")
    if i[0] == n[1] and i[1] == n[0]:
        print("-2")
    if i[0] != n[0] and i[0] != n[1] and i[1] != n[1] and i[1] != n[0]:
        print(0)
    if i[0] == n[0] and i[1] == n[1]:
        print("TEBRİKLER ! OYUNU KAZANDINIZ !")
        break
        t=1


#2.SORU

def toplam(n):
    if n == 1:
        return 1
    if n <= 0:
        return "0'dan büyük olmalı"
    else:
        return n+toplam(n-1) #recursive case

i = int(input("BİR SAYI GİRİNİZ : "))
print(f"1 den {i}'ye kadar olan sayıların toplamı (sınırlar dahil) = {toplam(i)}")


#3.SORU

def factoriel(n):
    if n < 0:
        return "TANIMSIZ"
    if n == 0 or n == 1:
        return 1
    if n>1:
        return n*factoriel(n-1) #recursive case

i = int(input("BİR SAYI GİRİNİZ : "))
print(f"{i}! = {factoriel(i)}")


#4.SORU

def fibonacci(n):
    if n <= 0:
        return "TANIMSIZ"
    if n == 1:
        return 1
    if n == 2:
        return 1
    else:
        return int(fibonacci(n-1)) + int(fibonacci(n-2)) #recursive case

for i in range(1,31):
    print(fibonacci(i),end=" ")


#5.SORU

def asal(n):
    if n < 2:
        return "ASAL DEĞİLDİR"
    for i in range(2,n):
        if n%i == 0:
            return False
    return True

def super_asal(x):
    while x>1:
        if asal(x):
            x = int(str(x)[:-1])
        if not asal(x):
            return False
            break
        return True

i=0
for j in range(10000,100000):
    if super_asal(j):
        i += 1
print(i)#biraz uzun sürüyor ama çalışıyor


#6.SORU

def binary_search(dizi,x):
    low = 0
    high = len(dizi) - 1
    mid = 0

    while low <= high:
        mid = (high + low)//2

        if dizi[mid] < x:
            low = mid + 1
        elif dizi[mid] > x:
            high = mid - 1
        else:
            return mid

    return -1

       #DİZİDE BİR ELEMAN OLMASI DURUMU
"""dizi = [5]
x = int(input("Aradığınız değeri giriniz : "))

result = binary_search(dizi,x)

if result != -1:
    print(f"Aradığınız eleman dizidedir ve index'i {str(result)}'tır")
else:
    print("Aradığınız eleman dizide değil")"""


       #DİZİDE TEK SAYIDA ELEMAN OLMASI DURUMU
"""dizi = [1,2,3,4,5]
x = int(input("Aradığınız değeri giriniz : "))

result = binary_search(dizi,x)

if result != -1:
    print(f"Aradığınız eleman dizidedir ve index'i {str(result)}'tır")
else:
    print("Aradığınız eleman dizide değil")"""


       #DİZİDE ÇİFT SAYIDA ELEMAN OLMASI DURUMU
"""dizi = [1,2,3,4]
x = int(input("Aradığınız değeri giriniz : "))

result = binary_search(dizi,x)

if result != -1:
    print(f"Aradığınız eleman dizidedir ve index'i {str(result)}'tır")
else:
    print("Aradığınız eleman dizide değil")"""
    

#7.SORU

def binary_search(dizi,low,high,x):
    if high >= low:
        mid = (high + low)//2
        if dizi[mid] == x:
            return mid
        elif dizi[mid] > x:    #RECURSIVE CASE BURADA BAŞLIYOR
            return binary_search(dizi,low,mid-1,x)
        else:
            return binary_search(dizi,mid+1,high,x)

    else:
        return -1

       #DİZİDE BİR ELEMAN OLMASI DURUMU
"""dizi = [5]
x = int(input("Aradığınız değeri giriniz : "))

result = binary_search(dizi,0,len(dizi)-1,x)

if result != -1:
    print(f"Aradığınız eleman dizidedir ve index'i {str(result)}'tır")
else:
    print("Aradığınız eleman dizide değil")"""

       #DİZİDE TEK SAYIDA ELEMAN OLMASI DURUMU
"""dizi = [1,2,3,4,5]
x = int(input("Aradığınız değeri giriniz : "))

result = binary_search(dizi,0,len(dizi)-1,x)

if result != -1:
    print(f"Aradığınız eleman dizidedir ve index'i {str(result)}'tır")
else:
    print("Aradığınız eleman dizide değil")"""

       #DİZİDE ÇİFT SAYIDA ELEMAN OLMASI DURUMU
"""dizi = [1,2,3,4]
x = int(input("Aradığınız değeri giriniz : "))

result = binary_search(dizi,0,len(dizi)-1,x)

if result != -1:
    print(f"Aradığınız eleman dizidedir ve index'i {str(result)}'tır")
else:
    print("Aradığınız eleman dizide değil")"""
